version: 2.1

jobs:
  android_test:
    docker:
      - image: circleci/android:api-30
    resource_class: large
    environment:
      TERM: dumb
      JAVA_OPTS: -Xms512m -Xmx2g
      GRADLE_OPTS: -Xmx3g -Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"
    working_directory: ~/galoy-mobile
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - run: sudo apt-get update
      - run: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
      - run: sudo apt-get install -y gnupg2 gcc g++ make nodejs
      - run: sudo npm install -g yarn
      - run: yarn install
      - run:
          name: Build APK
          command: cd android && ./gradlew assembleDebug
      - run:
          name: App upload and Set app id in environment variable.
          command: |
            cd android
            APP_UPLOAD_RESPONSE=$(curl -u "$BROWSERSTACK_USER:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@app/build/outputs/apk/debug/app-debug.apk")
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi
      - run:
          name: Run Test on Android
          command: |
            yarn start &
            ./node_modules/.bin/wdio android/browserstack.js
  
  ios_test:
    macos:
      xcode: 13.1.0
    working_directory: ~/galoy-mobile
    environment:
      FL_OUTPUT_DIR: output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: ~/galoy-mobile
      - add_ssh_keys:
          fingerprints:
            - "19:7e:f3:6c:be:a7:17:01:7d:09:ca:39:c3:98:86:90"
      - restore_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
      - run: cd ios && bundle config set deployment 'true'
      - run: cd ios && bundle check || bundle install
      - save_cache:
          key: 1-gem-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor
      - restore_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
      - run: yarn install
      - save_cache:
          key: 1-yarn-{{ checksum "yarn.lock" }}-pod1-{{ checksum "ios/Podfile.lock" }}
          paths:
            - node_modules
            - ios/Pods
      - run: yarn jest
      - run: sed -i'' -e "s/GOOGLE_SERVICE_FIREBASE_API_KEY/$GOOGLE_SERVICE_FIREBASE_API_KEY/" ios/GoogleService-Info.plist
      - run:
          name: Build IPA
          command: cd ios && bundle exec fastlane build_ipa
          no_output_timeout: 15m
      - run:
          name: App upload and Set app id in environment variable.
          command: |
            cd ios
            APP_UPLOAD_RESPONSE=$(curl -u "$BROWSERSTACK_USER:$BROWSERSTACK_ACCESS_KEY" -X POST https://api-cloud.browserstack.com/app-automate/upload -F "file=@output/gym/Bitcoin Beach.ipa")
            APP_ID=$(echo $APP_UPLOAD_RESPONSE | jq -r ".app_url")
            if [ $APP_ID != null ]; then
              echo "Apk uploaded to BrowserStack with app id : ",$APP_ID;
              echo "export BROWSERSTACK_APP_ID=$APP_ID" >> $BASH_ENV;
              source $BASH_ENV;
              echo "Setting value of BROWSERSTACK_APP_ID in environment variables to  ",$APP_ID;
            else
              UPLOAD_ERROR_MESSAGE=$(echo $APP_UPLOAD_RESPONSE | jq -r ".error")
              echo "App upload failed, reason : ",$UPLOAD_ERROR_MESSAGE
              exit 1;
            fi
      - run:
          name: Run Test on iOS
          command: |
            yarn start &
            ./node_modules/.bin/wdio ios/browserstack.js

workflows:
  android:
    jobs:
      - android_test
  ios:
    jobs:
      - ios_test
